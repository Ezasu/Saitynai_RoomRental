using Microsoft.EntityFrameworkCore;
using Microsoft.IdentityModel.Tokens;
using RoomRental.Application.Interfaces;
using RoomRental.Domain.Entities.RoomRental;
using RoomRental.Persistence;
using System;
using System.Collections.Generic;
using System.IdentityModel.Tokens.Jwt;
using System.Linq;
using System.Security.Claims;
using System.Text;
using System.Threading.Tasks;

namespace RoomRental.WebAPI.Authentication
{
    public class JwtAuthenticationManager : IJwtAuthenticationManager
    {
        private readonly RoomRentalContext _context;
        private readonly string _key;

        public JwtAuthenticationManager(RoomRentalContext context, string key)
        {
            _context = context;
            _key = key;
        }

        public string Authenticate(string username, string password)
        {
            User foundUser = _context.Users.FirstOrDefault(e => e.UserName == username && e.Password == password);
            if (foundUser is null)
                return null;

            var tokenHandler = new JwtSecurityTokenHandler();

            var tokenKey = Encoding.ASCII.GetBytes(_key);
            var tokenDescriptor = new SecurityTokenDescriptor
            {
                Subject = new ClaimsIdentity(new Claim[]
                {
                    new Claim(ClaimTypes.Name, username)
                }),
                Expires = DateTime.UtcNow.AddHours(1),
                SigningCredentials = new SigningCredentials(
                        new SymmetricSecurityKey(tokenKey),
                        SecurityAlgorithms.HmacSha256Signature)
            };

            var token = tokenHandler.CreateToken(tokenDescriptor);

            return tokenHandler.WriteToken(token);
        }
    }
}
